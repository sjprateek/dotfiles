# ~/.tmux.conf

# Enable mouse mode
set -g mouse on

###########################################################################
# Change prefix from default (C-b) to C-g
# C-g doesn't interfere with emacs-style editing keys

unbind -n C-b
unbind -n C-g
set -g prefix C-g

# C-g C-g to passthrough a C-g
unbind C-g
bind C-g send-key C-g

###########################################################################
# General options

# Default termtype. If the rcfile sets $TERM, that overrides this value.
#set -g default-terminal screen-256color

# Ring the bell if any background window rang a bell
set -g bell-action any
set -g visual-bell off

# Watch for activity in background windows
setw -g monitor-activity on
set -g visual-activity on

# scrollback size
set -g history-limit 10000

# set first window to index 1 (not 0) to map more to the keyboard layout
set -g base-index 1
setw -g pane-base-index 1

# pass through xterm keys
set -g xterm-keys on

# Automatically set window titles
set-option -g set-titles on
set-option -g set-titles-string '#H:#S.#I.#P #W #T' # window number,program name,active (or not)

# Statusbar Adjustments
set -g status-left "#[fg=white]#S#[fg=green] | #[default]"

# Maintain gapless sequence for session's window numbers
set-option -g renumber-windows on

###########################################################################
# General keymap

# Keep your finger on ctrl, or don't, same result
bind-key C-d detach-client
bind-key C-p paste-buffer

# Redraw the client (if interrupted by wall, etc)
bind R refresh-client

# reload tmux config
unbind r
bind r \
    source-file ~/.tmux.conf \;\
        display 'Reloaded tmux config.'

# Use emacs keybindings for tmux commandline input.
# (Note: if in vi mode, to get command mode you need to hit ESC twice.)
set -g status-keys emacs

# Use vi keybindings in copy and choice modes
setw -g mode-keys vi

###########################################################################
# Window management / navigation

# move between windows
#bind-key C-h previous-w
# C-\ (no prefix) to skip to last window we were in before this one
unbind -n "C-\\"
# bind -n "C-\\" last-window

# C-Space (no prefix) to tab to next window
bind -n C-Space next-window

# bind -n F10 new-window -c "#{pane_current_path}"
# bind -n F11 previous-window
# bind -n F12 next-window
unbind -n F10
unbind -n F11
unbind -n F12
bind -n F5 command-prompt -p "session name: " "new-session; rename-session '%%'"

bind -n F6 choose-session

# Shift arrow to switch windows
bind -n S-Left  previous-window
bind -n S-Right next-window
bind -n S-Up new-window -c "#{pane_current_path}"

###########################################################################
# Pane management / navigation

# Horizontal splits with s or C-s
unbind s
bind-key s split-window
# unbind C-s
# bind-key C-s split-window

# Vertical split with v or C-v
unbind v
bind-key v split-window -h

# sends input to all panes in a given window.
bind e setw synchronize-panes on
bind E setw synchronize-panes off

###########################################################################
# Scrollback / pastebuffer

# Vim-style copy/paste
unbind [
bind y copy-mode
unbind p
bind p paste-buffer

bind-key    -T copy-mode-vi C-j               send-keys -X copy-selection-and-cancel
bind-key    -T copy-mode-vi Enter             send-keys -X copy-selection-and-cancel
bind-key    -T copy-mode-vi Space             send-keys -X begin-selection
bind-key    -T copy-mode-vi A                 send-keys -X append-selection-and-cancel
bind-key    -T copy-mode-vi v                 send-keys -X begin-selection
bind-key    -T copy-mode-vi y                 send-keys -X copy-selection-and-cancel
bind-key    -T copy-mode-vi MouseDrag1Pane    select-pane ; send-keys -X begin-selection
bind-key    -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-selection-and-cancel

# Vim-style search, enter copy mode and search in one go
bind-key / copy-mode \; send-key ?

###########################################################################
bind -T copy-mode-vi WheelUpPane select-pane \;\
	send-keys -X -N 1 scroll-up
bind -T copy-mode-vi WheelDownPane select-pane \;\
	send-keys -X -N 1 scroll-down

###########################################################################

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator

is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

###########################################################################

# Minimal status bar

set -g default-terminal "screen-256color"
set-option -g status-position bottom
set-window-option -g xterm-keys on
bind-key -n S-Down set-option -g status
bind-key -n S-Left previous-window
bind-key -n S-Right next-window
set-option -g status-fg white
set-option -g status-bg default
set-option -g status-attr default
set-window-option -g window-status-fg "#666666"
set-window-option -g window-status-bg default
set-window-option -g window-status-attr default
set-window-option -g window-status-current-fg yellow
set-window-option -g window-status-current-bg default
set-window-option -g window-status-current-attr default
setw -g window-status-bell-attr none
setw -g window-status-activity-attr none

set-option -g message-fg white
set-option -g message-bg black
set-option -g message-attr bright
set -g status-left " "
set -g status-justify left
setw -g window-status-format         ' #I#{?window_bell_flag,#[fg=red]!,}#{?window_activity_flag,#[fg=red]!,}#{?window_zoomed_flag,#[fg=red]^,}#[fg=default,bg=default] #W '
setw -g window-status-current-format ' #I#{?window_bell_flag,#[fg=red]!,}#{?window_activity_flag,#[fg=red]!,}#{?window_zoomed_flag,#[fg=yellow]^, }#[fg=yellow]#W '
set -g status-right " "
set-option -g pane-active-border-style fg=colour237 #bg1
set-option -g pane-border-style fg=colour237 #bg1

###########################################################################

# Load local overrides/ configs
if-shell "[ -f ~/.tmux_local.conf ]" 'source ~/.tmux_local.conf'

